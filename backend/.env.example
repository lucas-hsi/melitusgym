# =============================================================================
# MELITUS GYM - VARIÁVEIS DE AMBIENTE PARA PRODUÇÃO
# =============================================================================
# Copie este arquivo para .env e configure as variáveis conforme necessário

# =============================================================================
# CONFIGURAÇÕES GERAIS
# =============================================================================
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=INFO

# =============================================================================
# CONFIGURAÇÕES DO BANCO DE DADOS
# =============================================================================
# Para usar PostgreSQL (RECOMENDADO para produção)
USE_SQLITE=false

# PostgreSQL - Configure com suas credenciais
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=melitus_gym
DATABASE_USER=melitus_user
DATABASE_PASSWORD=sua_senha_segura_aqui

# URL completa do banco (alternativa às configurações individuais)
# Formato: postgresql://usuario:senha@host:porta/database
DATABASE_URL=postgresql://postgres:password@host:5432/railway

# Para Railway/Render (será fornecido automaticamente)
# DATABASE_URL=${DATABASE_URL}

# Configurações individuais do PostgreSQL (opcional se DATABASE_URL estiver definida)
POSTGRES_DB=railway
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_password_here
POSTGRES_HOST=your_host_here
POSTGRES_PORT=5432

# Para desenvolvimento local com SQLite (alternativa):
# USE_SQLITE=true
# DATABASE_URL será ignorada quando USE_SQLITE=true

# =============================================================================
# CONFIGURAÇÕES DE SEGURANÇA
# =============================================================================
# Chave secreta para JWT (OBRIGATÓRIO - gere uma chave forte)
JWT_SECRET_KEY=your_super_secret_jwt_key_here_change_in_production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# CONFIGURAÇÕES DE CORS
# =============================================================================
# URLs permitidas para CORS (separadas por vírgula)
# Para desenvolvimento local
ALLOWED_ORIGINS=http://127.0.0.1:3000,http://localhost:3000

# Para produção, adicione seus domínios:
# ALLOWED_ORIGINS=https://melitusgym.vercel.app,https://www.melitusgym.com

# Para staging:
# ALLOWED_ORIGINS=https://melitus-gym-frontend.onrender.com,http://localhost:3000

# =============================================================================
# CONFIGURAÇÕES DO SERVIDOR
# =============================================================================
PORT=8000
HOST=0.0.0.0

# Workers do Uvicorn (para produção)
WORKERS=1

# =============================================================================
# CONFIGURAÇÕES DE APIS EXTERNAS
# =============================================================================
# OpenAI API (para IA de nutrição)
OPENAI_API_KEY=sua_chave_openai_aqui

# Open Food Facts (geralmente não precisa de chave)
OPENFOODFACTS_API_URL=https://world.openfoodfacts.org

# USDA FoodData Central
USDA_API_KEY=sua_chave_usda_aqui

# Wger API (exercícios - geralmente não precisa de chave)
WGER_API_URL=https://wger.de/api/v2

# =============================================================================
# CONFIGURAÇÕES DE NOTIFICAÇÕES (FIREBASE)
# =============================================================================
FCM_PROJECT_ID=your_firebase_project_id
FCM_PRIVATE_KEY_ID=your_private_key_id
FCM_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nyour_private_key_content_here\n-----END PRIVATE KEY-----\n"
FCM_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your-project.iam.gserviceaccount.com
FCM_CLIENT_ID=your_client_id
FCM_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FCM_TOKEN_URI=https://oauth2.googleapis.com/token
FCM_AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
FCM_CLIENT_X509_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-xxxxx%40your-project.iam.gserviceaccount.com

# =============================================================================
# CONFIGURAÇÕES DE CACHE E PERFORMANCE
# =============================================================================
# Redis (opcional - para cache em produção)
REDIS_URL=redis://localhost:6379/0

# Rate limiting (requisições por minuto)
RATE_LIMIT_PER_MINUTE=120

# Threshold para requisições lentas (em segundos)
SLOW_REQUEST_THRESHOLD=2.0

# =============================================================================
# CONFIGURAÇÕES DE MONITORAMENTO
# =============================================================================
# Sentry (para monitoramento de erros)
SENTRY_DSN=sua_dsn_sentry_aqui

# =============================================================================
# CONFIGURAÇÕES ESPECÍFICAS DO MELITUS GYM
# =============================================================================
# Configurações de saúde
DEFAULT_GLUCOSE_TARGET_MIN=80
DEFAULT_GLUCOSE_TARGET_MAX=180
DEFAULT_BLOOD_PRESSURE_SYSTOLIC_MAX=140
DEFAULT_BLOOD_PRESSURE_DIASTOLIC_MAX=90

# Configurações de notificações
ENABLE_PUSH_NOTIFICATIONS=true
NOTIFICATION_BATCH_SIZE=100

# =============================================================================
# EXEMPLO DE CONFIGURAÇÃO PARA DIFERENTES AMBIENTES
# =============================================================================

# DESENVOLVIMENTO LOCAL:
# ENVIRONMENT=development
# USE_SQLITE=true
# DEBUG=true
# ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# STAGING:
# ENVIRONMENT=staging
# USE_SQLITE=false
# DEBUG=false
# ALLOWED_ORIGINS=https://melitusgym-staging.vercel.app

# PRODUÇÃO:
# ENVIRONMENT=production
# USE_SQLITE=false
# DEBUG=false
# ALLOWED_ORIGINS=https://melitusgym.vercel.app

# =============================================================================
# NOTAS IMPORTANTES
# =============================================================================
# 1. NUNCA commite o arquivo .env no Git
# 2. Use senhas fortes e únicas para produção
# 3. Mantenha as chaves de API seguras
# 4. Configure CORS apenas para domínios necessários
# 5. Use HTTPS em produção
# 6. Configure backup automático do banco de dados
# 7. Monitore logs e métricas em produção