services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: healthtrack_db
    environment:
      POSTGRES_DB: healthtrack
      POSTGRES_USER: healthtrack_user
      POSTGRES_PASSWORD: healthtrack_pass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - healthtrack_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U healthtrack_user -d healthtrack"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: healthtrack_backend
    environment:
      - DATABASE_URL=postgresql://healthtrack_user:healthtrack_pass@db:5432/healthtrack
      - SECRET_KEY=your-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - healthtrack_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: healthtrack_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - healthtrack_network
    command: npm run dev

volumes:
  postgres_data:
    driver: local

networks:
  healthtrack_network:
    driver: bridge